<?xml version="1.0" encoding="utf-8" ?>
<ContentPage  BackgroundColor="{AppThemeBinding Light={StaticResource LightBackground}, Dark={StaticResource DarkBackground}}"  x:Class="SlateAnalyzer.Views.EntriesPage"
               xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
            xmlns:model="clr-namespace:SlateAnalyzer.Models"
            xmlns:viewmodel="clr-namespace:SlateAnalyzer.ViewModels"
            xmlns:ios="clr-namespace:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific;assembly=Microsoft.Maui.Controls"
             x:DataType="viewmodel:EntriesViewModel">

   

    <Grid  
        ColumnDefinitions="*,*"
        ColumnSpacing="0"
       RowDefinitions="1*,30, 6*,1*"
        RowSpacing="0"
        BackgroundColor="{AppThemeBinding Light={StaticResource LightBackground}, Dark={StaticResource DarkBackground}}">

        <!--Value="{AppThemeBinding Light={StaticResource LightBackground}, Dark={StaticResource DarkBackground}}"-->
        <!--Value="{AppThemeBinding Light={StaticResource DarkBackground}, Dark={StaticResource LightBackground}}"-->

        <Label Grid.Row="0" Padding="20"  HorizontalOptions="Center"  Style="{StaticResource MediumHeaderLabel}"  TextColor="{AppThemeBinding Light={StaticResource DarkBackground}, Dark={StaticResource LightBackground}}"  BackgroundColor="{AppThemeBinding Light={StaticResource LightBackground}, Dark={StaticResource DarkBackground}}"    LineBreakMode="NoWrap"
            Grid.ColumnSpan="2" Text="{Binding Contest.Name}" />


        <HorizontalStackLayout Padding="2" Grid.Row="1"  Grid.ColumnSpan="2" >

            <Label WidthRequest="50" HorizontalOptions="Center"  VerticalOptions="Center" TextColor="{AppThemeBinding Light={StaticResource DarkBackground}, Dark={StaticResource LightBackground}}" 
                   Style="{StaticResource SmallLabel}" Text="Rank" LineBreakMode="NoWrap"   />

            <Label WidthRequest="55"  VerticalOptions="Center" 
                   TextColor="{AppThemeBinding Light={StaticResource DarkBackground}, Dark={StaticResource LightBackground}}"  Style="{StaticResource SmallLabel}"
                   Text="Est." LineBreakMode="NoWrap"   />
            <Label WidthRequest="180" VerticalOptions="Center" TextColor="{AppThemeBinding Light={StaticResource DarkBackground}, Dark={StaticResource LightBackground}}" Style="{StaticResource SmallLabel}"
                   Text="Name" LineBreakMode="NoWrap"   />
            <Label WidthRequest="75" VerticalOptions="Center" TextColor="{AppThemeBinding Light={StaticResource DarkBackground}, Dark={StaticResource LightBackground}}" Style="{StaticResource SmallLabel}"
                   Text="Points"/>
            <Label WidthRequest="40" VerticalOptions="Center" TextColor="{AppThemeBinding Light={StaticResource DarkBackground}, Dark={StaticResource LightBackground}}" Style="{StaticResource SmallLabel}"
                   Text="Est Pts"/>



        </HorizontalStackLayout>

        <RefreshView   RefreshColor="Orange"
            Grid.ColumnSpan="2" Grid.Row="2"
            Command="{Binding GetEntriesCommand}"
            IsRefreshing="{Binding IsRefreshing}">
            <ContentView Grid.ColumnSpan="2">
 
                <CollectionView Grid.ColumnSpan="2"  ItemsSource="{Binding Entries}"
                        SelectionMode="None">
            <CollectionView.ItemTemplate  >
                <DataTemplate x:DataType="model:AppEntryModel">

                                <Frame BorderColor="AliceBlue" Padding="0,0" Grid.ColumnSpan="3" BackgroundColor="{AppThemeBinding Light={StaticResource LightBackground}, Dark={StaticResource DarkBackground}}" >
                            <Frame.GestureRecognizers >
                                <TapGestureRecognizer 
                                                Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:EntriesViewModel}}, Path=GoToDetailsCommand}"
                                                CommandParameter="{Binding .}"/>
                            </Frame.GestureRecognizers>
                                <Grid  Grid.ColumnSpan="2"    Grid.Row="2" Padding="0,0"  ColumnDefinitions="1*,4*,1* "  RowDefinitions="1*,1*" >

                                    <Label Grid.Row="0"   Grid.Column="0"  FontAttributes="Bold" TextColor="{AppThemeBinding Light={StaticResource DarkBackground}, Dark={StaticResource LightBackground}}"   Style="{StaticResource SmallLabel}" Text="{Binding Rank}" LineBreakMode="NoWrap"   />
                                    <Label  Grid.Row="0" Grid.Column="1"  TextColor="{AppThemeBinding Light={StaticResource DarkBackground}, Dark={StaticResource LightBackground}}"  Style="{StaticResource LargeLabel}" Text="{Binding Name}" LineBreakMode="NoWrap"   />
                                        <Label  Grid.Row="0"  Grid.Column="2" FontAttributes="Bold" TextColor="{AppThemeBinding Light={StaticResource DarkBackground}, Dark={StaticResource LightBackground}}"  Style="{StaticResource MediumLabel}" Text="{Binding Points}"/>


                                        <Label  Grid.Row="1" Grid.Column="0" FontAttributes="Italic" TextColor="{AppThemeBinding Light={StaticResource DarkBackground}, Dark={StaticResource LightBackground}}"   Style="{StaticResource SmallLabel}" Text="{Binding EstimatedPointsRank}" LineBreakMode="NoWrap"   />
                                        <Label  Grid.Row="1" Grid.Column="2" FontAttributes="Italic" TextColor="{AppThemeBinding Light={StaticResource DarkBackground}, Dark={StaticResource LightBackground}}"  Style="{StaticResource SmallLabel}" Text="{Binding EstimatedPoints, StringFormat='{0:F2}'}"/>
                                </Grid>
                            </Frame>
                   
                </DataTemplate>
            </CollectionView.ItemTemplate>

        </CollectionView>
    </ContentView>
    </RefreshView>
    <!--<ScrollView>
        <VerticalStackLayout
            Spacing="25"
            Padding="30,0"
            VerticalOptions="Center">

            <Image
                Source="dotnet_bot.png"
                SemanticProperties.Description="Cute dot net bot waving hi to you!"
                HeightRequest="200"
                HorizontalOptions="Center" />

            <Label
                Text="Hello, World!"
                SemanticProperties.HeadingLevel="Level1"
                FontSize="32"
                HorizontalOptions="Center" />

            <Label
                Text="Welcome to .NET Multi-platform App UI"
                SemanticProperties.HeadingLevel="Level2"
                SemanticProperties.Description="Welcome to dot net Multi platform App U I"
                FontSize="18"
                HorizontalOptions="Center" />

            <Button
                x:Name="CounterBtn"
                Text="Click me"
                SemanticProperties.Hint="Counts the number of times you click"
                Clicked="OnCounterClicked"
                HorizontalOptions="Center" />

        </VerticalStackLayout>
    </ScrollView>-->
        <Button 
            Grid.Row="3"
            Grid.Column="0"
            Margin="8"
            Command="{Binding GetEntriesCommand}"
            IsEnabled="{Binding IsNotBusy}"
            Style="{StaticResource ButtonOutline}"
            Text="Live Standings" />
        <Button
            Grid.Row="3"
            Grid.Column="1"
            Margin="8"
            Command="{Binding GetClosestEntryCommand}"
            IsEnabled="{Binding IsNotBusy}"
            Style="{StaticResource ButtonOutline}"
            Text="---" />
        <ActivityIndicator
            Grid.Row="2"
            
            Grid.ColumnSpan="2"
            HorizontalOptions="Fill"
            IsRunning="{Binding IsBusy}"
            IsVisible="{Binding IsBusy}"
            Color="{StaticResource Primary}"
            VerticalOptions="Center" />
    </Grid>
</ContentPage>


<!--<ContentPage.Resources>
    <ResourceDictionary>
        <local:StringToColorConverter x:Key="ColorConverter" />
    </ResourceDictionary>
</ContentPage.Resources>-->

<!--<Label Text="{Binding Name}" TextColor="{Binding TextColor, Converter = {StaticResource ColorConverter}}"/>-->
    
    <!--public class StringToColorConverter : IValueConverter
{
    public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
    {
        var color = value.ToString();
        switch (color)
        {
            case "Green":
                return Colors.Green;
            case "Red":
                return Colors.Red;
            default:
                return Colors.Yellow;
        }
    }

    public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
    {
        return null;
    }
}-->
    