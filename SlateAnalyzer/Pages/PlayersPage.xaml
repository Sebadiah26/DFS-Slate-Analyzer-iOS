<?xml version="1.0" encoding="utf-8" ?>
<ContentPage Shell.BackgroundColor="{AppThemeBinding Light={StaticResource LightBackground}, Dark={StaticResource DarkBackground}}"
    BackgroundColor="{AppThemeBinding Light={StaticResource LightBackground}, Dark={StaticResource DarkBackground}}" 
              x:Class="SlateAnalyzer.Pages.PlayersPage"
               xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
            xmlns:model="clr-namespace:SlateAnalyzer.Models"
            xmlns:viewmodel="clr-namespace:SlateAnalyzer.ViewModels"
            xmlns:ios="clr-namespace:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific;assembly=Microsoft.Maui.Controls"
             x:DataType="viewmodel:PlayersViewModel" 
              >
   
        <Shell.TitleView  >
        <Grid  BackgroundColor="{AppThemeBinding Light={StaticResource LightBackground}, Dark={StaticResource DarkBackground}}" MinimumHeightRequest="30" MinimumWidthRequest="30">
            <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Label VerticalTextAlignment="Center" HorizontalTextAlignment="Center"  Grid.Column="1" Style="{StaticResource MediumHeaderLabel}" Text="DFS GAMEDAY LIVE"  HeightRequest="30" />

        </Grid>

    </Shell.TitleView>
   

    <Grid  
        ColumnDefinitions="*,*"
        ColumnSpacing="0"
       RowDefinitions="80, 6*"
        RowSpacing="0"
        BackgroundColor="{AppThemeBinding Light={StaticResource LightBackground}, Dark={StaticResource DarkBackground}}">

      

        <VerticalStackLayout Padding="0,0" Grid.Row="0"  Grid.ColumnSpan="2" >
            <Label   Grid.Row="0" Padding="0"  HorizontalOptions="Center"  Style="{StaticResource MediumHeaderLabel}"  TextColor="{AppThemeBinding Light={StaticResource DarkBackground}, Dark={StaticResource LightBackground}}"  BackgroundColor="{AppThemeBinding Light={StaticResource LightBackground}, Dark={StaticResource DarkBackground}}"    LineBreakMode="NoWrap"
            Grid.ColumnSpan="2" Text="{Binding Contest.Name, StringFormat='{0}'}" MinimumHeightRequest="30" />
            <Label Padding="5,5"  HorizontalOptions="CenterAndExpand"  VerticalOptions="Center" TextColor="{AppThemeBinding Light={StaticResource DarkBackground}, Dark={StaticResource LightBackground}}" 
                   Style="{StaticResource LargeLabel}" Text="Contest Players" LineBreakMode="NoWrap"   />

        </VerticalStackLayout>

        
        
        <RefreshView    RefreshColor="Orange"
            Grid.ColumnSpan="2" Grid.Row="1"
            Command="{Binding GetPlayersCommand}"
            IsRefreshing="{Binding IsRefreshing}">
            <ContentView Grid.ColumnSpan="2" Padding="0,0" Margin="5"   BackgroundColor="{AppThemeBinding Light={StaticResource DarkBackground}, Dark={StaticResource Gray600}}">

                <CollectionView Grid.ColumnSpan="2" EmptyView="No items to display" ItemsSource="{Binding ContestPlayers}"
                        SelectionMode="None">

                    <CollectionView.Header >
                        <Grid  Grid.ColumnSpan="2"    Grid.Row="1" Padding="0,0"  ColumnDefinitions="2.5*,1.5*,1*,1* "  RowDefinitions="1*" >

                            <Label  Padding="5,5"  BackgroundColor="{AppThemeBinding Light={StaticResource LightBackground}, Dark={StaticResource DarkBackground}}"
                                    Grid.Column="0"  FontAttributes="Bold"  VerticalTextAlignment="Center"
                                          TextColor="{AppThemeBinding Light={StaticResource DarkBackground}, Dark={StaticResource LightBackground}}"   
                                          Style="{StaticResource MediumLabel}" Text="Player" LineBreakMode="NoWrap"   />

                            <Label  BackgroundColor="{AppThemeBinding Light={StaticResource LightBackground}, Dark={StaticResource DarkBackground}}" Grid.Column="1" 
                                    VerticalTextAlignment="Center"
                                         TextColor="{AppThemeBinding Light={StaticResource DarkBackground}, Dark={StaticResource LightBackground}}" 
                                         Style="{StaticResource MediumLabel}" Text="Owned" LineBreakMode="NoWrap"   />

                            <Label BackgroundColor="{AppThemeBinding Light={StaticResource LightBackground}, Dark={StaticResource DarkBackground}}"   Grid.Column="2" FontAttributes="Bold"
                                              VerticalTextAlignment="Center"   TextColor="{AppThemeBinding Light={StaticResource DarkBackground}, Dark={StaticResource LightBackground}}" 
                                                Style="{StaticResource MediumLabel}" Text="Pts"/>
                            <Label  BackgroundColor="{AppThemeBinding Light={StaticResource LightBackground}, Dark={StaticResource DarkBackground}}"  Grid.Column="3" FontAttributes="Bold"
                                             VerticalTextAlignment="Center"    TextColor="{AppThemeBinding Light={StaticResource DarkBackground}, Dark={StaticResource LightBackground}}" 
                                                Style="{StaticResource MediumLabel}" Text="Est. Pts"/>

                        </Grid>

                    </CollectionView.Header>

                        <CollectionView.ItemTemplate  >
                <DataTemplate x:DataType="model:AppContestPlayerModel">

                            <Frame BorderColor="{StaticResource Blue200Accent}" Margin="5,1" Padding="0,0" Grid.ColumnSpan="2" BackgroundColor="{AppThemeBinding Light={StaticResource LightBackground}, Dark={StaticResource DarkBackground}}" >
                            <Frame.GestureRecognizers >
                                <TapGestureRecognizer 
                                                Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:PlayersViewModel}}, Path=GoToPlayerDetailsCommand}"
                                                CommandParameter="{Binding .}"/>
                            </Frame.GestureRecognizers>
                                <Grid  Grid.ColumnSpan="2"    Grid.Row="1" Padding="1,1"  ColumnDefinitions="2.5*,1.5*,1*,1* "  RowDefinitions="1*" >

                                    <Label  Padding="5,0"  BackgroundColor="{AppThemeBinding Light={StaticResource Gray500}, Dark={StaticResource Gray500}}"
                                    Grid.Column="0"  FontAttributes="Bold" 
                                          TextColor="{AppThemeBinding Light={StaticResource DarkBackground}, Dark={StaticResource LightBackground}}"   
                                          Style="{StaticResource SmallLabel}" Text="{Binding PlayerName, StringFormat='{0}'}" LineBreakMode="NoWrap"   />

                                    <Label  BackgroundColor="{AppThemeBinding Light={StaticResource Gray500}, Dark={StaticResource Gray500}}" Grid.Column="1"  VerticalTextAlignment="Center" VerticalOptions="Center"  
                                         TextColor="{AppThemeBinding Light={StaticResource DarkBackground}, Dark={StaticResource LightBackground}}" 
                                         Style="{StaticResource MediumLabel}" Text="{Binding Drafted, StringFormat='{0}'}" LineBreakMode="NoWrap"   />

                                    <Label BackgroundColor="{AppThemeBinding Light={StaticResource Gray500}, Dark={StaticResource Gray500}}"   Grid.Column="2" FontAttributes="Bold"
                                                TextColor="{AppThemeBinding Light={StaticResource DarkBackground}, Dark={StaticResource LightBackground}}" 
                                                Style="{StaticResource MediumLabel}" Text="{Binding Points}"/>
                                    <Label  BackgroundColor="{AppThemeBinding Light={StaticResource Gray500}, Dark={StaticResource Gray500}}"  Grid.Column="3" FontAttributes="Bold"
                                                TextColor="{AppThemeBinding Light={StaticResource DarkBackground}, Dark={StaticResource LightBackground}}" 
                                                Style="{StaticResource MediumLabel}" Text="{Binding EstimatedPoints}"/>

                                </Grid>
                            </Frame>
                   
                </DataTemplate>
            </CollectionView.ItemTemplate>

        </CollectionView>
    </ContentView>
    </RefreshView>
        
      
        <!--<Button 
            Grid.Row="3"
            Grid.Column="0"
            Margin="8"
            Command="{Binding GetEntriesCommand}"
            IsEnabled="{Binding IsNotBusy}"
            Style="{StaticResource ButtonOutline}"
            Text="Live Standings" />
        <Button
            Grid.Row="3"
            Grid.Column="1"
            Margin="8"
            Command="{Binding GetClosestEntryCommand}"
            IsEnabled="{Binding IsNotBusy}"
            Style="{StaticResource ButtonOutline}"
            Text="" />
        
        
        <ActivityIndicator
            Grid.Row="2"
            
            Grid.ColumnSpan="2"
            HorizontalOptions="Fill"
            IsRunning="{Binding IsBusy}"
            IsVisible="{Binding IsBusy}"
            Color="{StaticResource Primary}"
            VerticalOptions="Center" />
        
        -->
    </Grid>
</ContentPage>


<!--<ContentPage.Resources>
    <ResourceDictionary>
        <local:StringToColorConverter x:Key="ColorConverter" />
    </ResourceDictionary>
</ContentPage.Resources>-->

<!--<Label Text="{Binding Name}" TextColor="{Binding TextColor, Converter = {StaticResource ColorConverter}}"/>-->
    
    <!--public class StringToColorConverter : IValueConverter
{
    public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
    {
        var color = value.ToString();
        switch (color)
        {
            case "Green":
                return Colors.Green;
            case "Red":
                return Colors.Red;
            default:
                return Colors.Yellow;
        }
    }

    public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
    {
        return null;
    }
}-->
    